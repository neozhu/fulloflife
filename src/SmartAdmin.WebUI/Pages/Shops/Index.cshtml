@page
@using CleanArchitecture.Razor.Domain.Enums
@using Microsoft.AspNetCore.Mvc.Localization
@using CleanArchitecture.Razor.Application.Constants.Permission
@model SmartAdmin.WebUI.Pages.Shops.IndexModel
@inject Microsoft.Extensions.Localization.IStringLocalizer<IndexModel> _localizer
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService _authorizationService
@{
    ViewData["Title"] = _localizer["Shop"].Value;
    ViewData["PageName"] = "shops_index";
    ViewData["Category1"] = _localizer["CRM"].Value;
    ViewData["Heading"] = _localizer["Shops"].Value;
    ViewData["PageDescription"] = _localizer["Shop"].Value;
    ViewData["PreemptiveClass"] = "Default";
    var _canCreate = await _authorizationService.AuthorizeAsync(User, null, Permissions.Shops.Create);
    var _canEdit = await _authorizationService.AuthorizeAsync(User, null, Permissions.Shops.Edit);
    var _canDelete = await _authorizationService.AuthorizeAsync(User, null, Permissions.Shops.Delete);
    var _canSearch = await _authorizationService.AuthorizeAsync(User, null, Permissions.Shops.Search);
    var _canExport = await _authorizationService.AuthorizeAsync(User, null, Permissions.Shops.Export);
    var _canImport = await _authorizationService.AuthorizeAsync(User, null, Permissions.Shops.Import);

}
@section HeadBlock {

<link rel="stylesheet" media="screen, print" href="~/css/formplugins/bootstrap-daterangepicker/bootstrap-daterangepicker.css">
<link rel="stylesheet" media="screen, print" href="~/css/fa-solid.css">
<link rel="stylesheet" media="screen, print" href="~/css/theme-demo.css">
<link rel="stylesheet" media="screen,print" href="~/lib/easyui/themes/insdep/easyui.css">
<style>

    .shop_dg_datagrid-cell-c1-_action {
        overflow: visible !important
    }
</style>
}
<div id="js-page-content-demopanels" class="card mb-g">
    <div class="card-header bg-white d-flex align-items-center">
        <h4 class="m-0">
            @ViewData["Title"]
            <small></small>
        </h4>
        <div class="ml-auto">
            @if (_canSearch.Succeeded)
            {
                <button class="btn btn-sm btn-outline-primary " id="refreshbutton">
                    <span class="@(Settings.Theme.IconPrefix) fa-sync mr-1"></span>
                    @_localizer["Refresh"]
                </button>
            }
            @if (_canCreate.Succeeded)
            {
                <button class="btn btn-sm btn-outline-primary " id="addbutton">
                    <span class="@(Settings.Theme.IconPrefix) fa-plus mr-1"></span>
                    @_localizer["Add"]
                </button>
            }
            @if (_canDelete.Succeeded)
            {
                <button class="btn btn-sm btn-outline-danger" disabled id="deletebutton">
                    <span class="@(Settings.Theme.IconPrefix) fa-trash-alt mr-1"></span>
                    @_localizer["Delete"]
                </button>
            }

            @if (_canImport.Succeeded)
            {
                <button class="btn btn-sm btn-outline-primary " id="importbutton">
                    <span class="@(Settings.Theme.IconPrefix) fa-upload mr-1"></span>
                    @_localizer["Import Excel"]
                </button>

            }
            @if (_canExport.Succeeded)
            {
                <button class="btn btn-sm btn-outline-primary " id="exportbutton">
                    <span class="@(Settings.Theme.IconPrefix) fa-download mr-1"></span>
                    @_localizer["Export Excel"]
                </button>
            }
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-12">
                <table id="shop_dg">
                </table>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="shop_modal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false">
    <div class="modal-dialog modal-lg" role="dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="@(Settings.Theme.IconPrefix) fa-times"></i></span>
                </button>
            </div>
            <form id="shop_form" class="needs-validation" novalidate="novalidate">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Input.Id" />
                    <input type="hidden" asp-for="Input.Icon" />
                    <div class="form-row">
                        <div class="col-md-12">
                            <label class="form-label" asp-for="Input.Name">@_localizer["Name"] <span class="text-danger">*</span></label>
                            <input type="text" asp-for="Input.Name" class="form-control" placeholder="@_localizer["Name"]" autocomplete="off" />
                            <span class="invalid-feedback" asp-validation-for="Input.Name">Sorry, you missed this one.</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" asp-for="Input.ContactName">@_localizer["Contact Name"] </label>
                            <input type="text" asp-for="Input.ContactName" class="form-control" placeholder="@_localizer["Contact Name"]" autocomplete="off" />
                            <span class="invalid-feedback" asp-validation-for="Input.ContactName">Sorry, you missed this one.</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" asp-for="Input.ContactPhone">@_localizer["Contact Phone"] <span class="text-danger">*</span></label>
                            <input type="text" asp-for="Input.ContactPhone" class="form-control" placeholder="@_localizer["Contact Phone"]" autocomplete="off" />
                            <span class="invalid-feedback" asp-validation-for="Input.ContactPhone">Sorry, you missed this one.</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" asp-for="Input.DeliveryDistance">@_localizer["Delivery Distance(KM)"]</label>
                            <input type="number" asp-for="Input.DeliveryDistance" class="form-control" placeholder="@_localizer["Delivery Distance"]" autocomplete="off" />
                            <span class="invalid-feedback" asp-validation-for="Input.DeliveryDistance">Sorry, you missed this one.</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" asp-for="Input.MinCharge">@_localizer["Min Charge(yuan)"]</label>
                            <input type="number" asp-for="Input.MinCharge" class="form-control" placeholder="@_localizer["Min Charge"]" autocomplete="off" />
                            <span class="invalid-feedback" asp-validation-for="Input.MinCharge">Sorry, you missed this one.</span>
                        </div>
                        <div class="col-md-12">
                            <label class="form-label" asp-for="Input.Address">@_localizer["Address"] <span class="text-danger">*</span></label>
                            <input type="text" asp-for="Input.Address" class="form-control" placeholder="@_localizer["Address"]" autocomplete="off" />
                            <span class="invalid-feedback" asp-validation-for="Input.Address">Sorry, you missed this one.</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" asp-for="Input.Latitude">@_localizer["Latitude"]</label>
                            <input type="text" asp-for="Input.Latitude" class="form-control" placeholder="@_localizer["Latitude"]" readonly="readonly" autocomplete="off" />
                            <span class="invalid-feedback" asp-validation-for="Input.Latitude">Sorry, you missed this one.</span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" asp-for="Input.Longitude">@_localizer["Longitude"]</label>
                            <input type="text" asp-for="Input.Longitude" class="form-control" placeholder="@_localizer["Longitude"]" readonly="readonly" autocomplete="off" />
                            <span class="invalid-feedback" asp-validation-for="Input.Longitude">Sorry, you missed this one.</span>
                        </div>

                        <div class="col-md-12">
                            <label class="form-label" for=""></label>
                            <input type="file" asp-for="IconUploadedFile" accept="image/png, image/gif, image/jpeg" style="display:none" required />
                            <div class="">
                                <button name="iconuploadbutton" type="button" class="btn btn-primary btn-icon waves-effect waves-themed mr-2">
                                    <i class="fal fa-paperclip"></i>
                                </button>
                                <small class="m-0 fw-300">
                                    @_localizer["It is recommended that the size of the uploaded image be 68 × 68 pixels"]
                                </small>
                                <div class="flex-row mt-2 mb-2">
                                    <div class="rounded width-10 height-10 d-inline-block bg-faded shadow-1">
                                        <img id="shop_icon" src="https://via.placeholder.com/68" alt="shop ico" />
                                    </div>
                                </div>
                            </div>
                        </div>



                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@_localizer["Close"]</button>
                    <button type="submit" name="savebutton" class="btn btn-primary">@_localizer["Save"]</button>
                </div>
            </form>
        </div>
    </div>
</div>
@await Component.InvokeAsync("ImportExcel", new
{
    importUri = Url.Page("/Shops/Index") + "?handler=Import",
    getTemplateUri = @Url.Page("/Shops/Index") + "?handler=CreateTemplate",
    onImportedSucceeded = "reloadData()"
})
@section ScriptsBlock {
<partial name="_ValidationScriptsPartial" />
<script charset="utf-8" src="https://map.qq.com/api/js?v=2.exp&key=PP4BZ-5M6E4-KN3UG-X22DN-H2XXK-YNFWB&libraries=place"></script>
<script charset="utf-8" src="https://map.qq.com/api/gljs?v=1.exp&libraries=service&key=PP4BZ-5M6E4-KN3UG-X22DN-H2XXK-YNFWB"></script>
<script type="text/javascript" src="~/lib/easyui/jquery.easyui.min.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/lib/easyui/plugins/datagrid-filter.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/lib/easyui/jquery.easyui.component.js" asp-append-version="true"></script>

<script>jQuery.fn.tooltip = bootstrapTooltip;</script>
<script src="~/lib/jquery-form/jquery.jsonToForm.js"></script>
<script>
       function initautocomplete() {
            var ap = new qq.maps.place.Autocomplete(document.getElementById('Input_Address'), {
                offset: new qq.maps.Size(0, 5),
                location: '江苏省',
                zIndex: 99999

            });
            var listener = qq.maps.event.addListener(
               ap,
              'confirm',
              function(res) {
                var geocoder = new TMap.service.Geocoder();
                var address ="江苏省苏州市" +  document.getElementById('Input_Address').value ;
                geocoder.getLocation({ address:address})
                        .then((result) => {
                            if(result.status!=0) {
                                document.getElementById('Input_Address').value = '';
                                alert(result.message);
                            } else {
                               $('#Input_Longitude').val(result.result.location.lng);
                               $('#Input_Latitude').val(result.result.location.lat);
                            }
                         })
                        .catch(response => {
                             document.getElementById('Input_Address').value = '';
                             alert(response.message);
                         });
              }
            );

       }


       var searchService = new qq.maps.SearchService({
        complete : function(results){
            if(results.type === "CITY_LIST") {
                return;
            }
            var pois = results.detail.pois;
            var latlngBounds = new qq.maps.LatLngBounds();
            for(var i = 0,l = pois.length;i < l; i++){
                var poi = pois[i];
                latlngBounds.extend(poi.latLng);
                var marker = new qq.maps.Marker({
                    map:map,
                    position: poi.latLng
                });

                marker.setTitle(poi.name);
            }
            map.fitBounds(latlngBounds);
        }
    });

       $('#shop_modal').on('shown.bs.modal',function() {
           initautocomplete()
       })





</script>
<script type="text/javascript">

    $('#refreshbutton').click(function () {
        reloadData();
    });
    $('#addbutton').click(function () {
        popupmodal(null);
    });
    $('#deletebutton').click(function () {
        onDeleteChecked();
    });
    $('#importbutton').click(function () {
       showImportModal();
    });
    $('#exportbutton').click(function () {
        onExport();
    });
    $('#shop_form :submit').click(function (e) {
        var form = document.querySelector('#shop_form');
        if ($(form).valid() === false) {
            form.classList.add('was-validated');
        } else {
            event.preventDefault();
            event.stopPropagation();
            var request = $('#shop_form').serialize();
            var formData = new FormData(form);
            formData.append("IconUploadedFile", uploadiconfileinput.files[0]);
            axios({
                url: '@Url.Page("/Shops/Index")',
                method: 'post',
                data: formData,
                processData: false,// 告诉axios不要去处理发送的数据(重要参数)
                contentType: false,   // 告诉axios不要去设置Content-Type请求头
            }).then((response) => {
                    toastr["info"]('@_localizer["Save successfully"]');
                    $('#shop_modal').modal('toggle');
                    reloadData();
            })

        }
        event.preventDefault();
        event.stopPropagation();
    })

    var iconuploadbutton = document.querySelector("button[name='iconuploadbutton']");
    var productcatalogicon = document.querySelector("#shop_icon");
    var uploadiconfileinput = document.getElementById("IconUploadedFile");
    var savebutton = document.querySelector("button[name='savebutton']");
    iconuploadbutton.addEventListener('click', (e) => {
        uploadiconfileinput.click();
    })
    uploadiconfileinput.onchange = () => {
        const filename = uploadiconfileinput.value.split('\\').pop();
        const form = document.querySelector('#shop_form');
        const formData = new FormData(form);
        formData.append("IconUploadedFile", uploadiconfileinput.files[0]);
        axios({
                url: '@Url.Page("/Shops/Index")?handler=Qiniu',
                method: 'post',
                data: formData,
                processData: false,// 告诉axios不要去处理发送的数据(重要参数)
                contentType: false,   // 告诉axios不要去设置Content-Type请求头
            }).then((response) => {
                const url =  response.data;
                $('#Input_Icon').val(url);
                productcatalogicon.src  = url;
                    toastr["info"](`${filename}:@_localizer["upload to qiniu"]`);
            })

        savebutton.disabled = false;

    };
    var $dg={};
    var initdatagrid = () => {
        $dg = $('#shop_dg').datagrid({
            height: 700,
            method: 'GET',
            rownumbers: false,
            singleSelect: true,
            selectOnCheck: false,
            checkOnSelect: false,
            pagination: true,
            clientPaging: false,
            remoteFilter: true,
            sortName: 'Id',
            sortOrder:'desc',
            pageSize: 15,
            pageList: [10, 15, 30, 50, 100, 1000],
            onBeforeLoad: function () {
                $('#deletebutton').prop('disabled', true);
            },
            onCheckAll: function (rows) {
                const checked = $(this).datagrid('getChecked').length > 0;
                $('#deletebutton').prop('disabled', !checked);
            },
            onUncheckAll: function () {
                $('#deletebutton').prop('disabled', true);
            },
            onCheck: function () {
                $('#deletebutton').prop('disabled', false);
            },
            onUncheck: function () {
                const checked = $(this).datagrid('getChecked').length > 0;
                $('#deletebutton').prop('disabled', !checked);
            },
            columns: [[
                { field: 'ck', checkbox: true },
                {
                    field: '_action',
                    title: '@_localizer["Command"]',
                    width: 100,
                    align: 'center',
                    formatter: function (value, row, index) {
                        return `<div class="btn-group" role="group">
                                  <button id="commandbtngroup" type="button" @(_canEdit.Succeeded? "":"disabled")  class="btn btn-outline-primary btn-sm dropdown-toggle waves-effect waves-themed" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="@(Settings.Theme.IconPrefix) fa-edit"></i>
                                 </button>
                                 <div class="dropdown-menu dropdown-menu-animated" aria-labelledby="commandbtngroup">
                                   <button class="dropdown-item" onclick="onEdit(${index})" @(_canEdit.Succeeded? "":"disabled")><i class="fal fa-edit mr-1"></i> @_localizer["Edit"]</button>
                                   <button class="dropdown-item" onclick="onDelete('${row.Id}')" @(_canDelete.Succeeded? "":"disabled") ><i class="fal fa-trash-alt mr-1"></i> @_localizer["Delete"]</button>
                                 </div>
                              </div>`;
                    }
                },
                { field: 'Name',
                  title: '@_localizer["Name"]',
                  sortable: true,
                  width: 300,
                  formatter:function(value,row){
                      return `<a href="#" class="fs-lg text-dark">${value}</a>
                              <br>
                             <small class="text-muted">${row.Address}</small>
                             `
                  }
                },
                { field: 'ContactName',
                  title: '@_localizer["Contact Name"]',
                  sortable: true,
                  width: 200,
                  formatter:function(value,row){
                      return `<a href="#" class="fs-lg text-dark">${value}</a>
                              <br>
                             <small class="text-muted">${row.ContactPhone}</small>
                             `
                  }
                },
                { field: 'DeliveryDistance', title: '@_localizer["Delivery Distance"]', sortable: true, width: 160 },
                { field: 'MinCharge', title: '@_localizer["Min Charge"]', sortable: true, width: 160 },
                { field: 'Icon', title: '@_localizer["Icon"]', sortable: true, width: 100,
                  align: 'center',
                  formatter:function(value) {
                     if(value){
                         return `<div class="rounded width-10 height-10 d-inline-block bg-faded shadow-1">
                                     <img id="shop_icon" src="${value}" alt="product catalog icon" />
                             </div>`
                     }

                  }
                },

            ]]
        })
            .datagrid('enableFilter', {})
            .datagrid('load', '@Url.Page("/Shops/Index")?handler=Data');

    }

    var reloadData = () => {
        $dg.datagrid('load', '@Url.Page("/Shops/Index")?handler=Data');
    }

    $(() => {
        initdatagrid();
    })
    var popupmodal = (shop) => {
        $('#shop_modal').modal('toggle');
        $('#shop_modal .modal-title').html('@_localizer["Add Shop"]');
        $('#shop_form').clearForm();
        $('#shop_form')[0].reset();
        if (shop) {

            $('#shop_modal .modal-title').html('@_localizer["Add Shop"]');
            productcatalogicon.src = shop.Icon;
            $('#shop_form').jsonToForm(shop, {
                Icon:function(v) {
                     $('#shop_form #Input_Icon').val(v);
                    if(v){
                        productcatalogicon.src = v;
                    }else{
                        productcatalogicon.src = "https://via.placeholder.com/68";
                    }
                }
            })
        } else {

            $('#shop_form #Input_Id').val(0);
            $('#shop_form #Input_Icon').val('');
            productcatalogicon.src = "https://via.placeholder.com/68";
        }
    }

    var onEdit = (index) => {
        var shop = $dg.datagrid('getRows')[index];
        popupmodal(shop);
    }
    var onDelete = (id) => {
        bootbox.confirm({
            message: "@_localizer["Are you sure delete a row?"]",
            buttons: {
                confirm: {
                    label: '@_localizer["Yes"]',
                    className: 'btn-success'
                },
                cancel: {
                    label: '@_localizer["No"]',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result) {
                    axios.get('@Url.Page("/Shops/Index")?handler=Delete&id=' + id).then(res => {
                        toastr["info"]('@_localizer["Delete successfully"]');
                        reloadData();
                    })

                }
            }
        })
    }
    var onDeleteChecked = () => {
        var checkedId = $dg.datagrid('getChecked').map(x => x.Id);
        if (checkedId.length > 0) {
            bootbox.confirm({
                message: "@_localizer["Are you sure delete checked rows?"]",
                buttons: {
                    confirm: {
                        label: '@_localizer["Yes"]',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: '@_localizer["No"]',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        axios.post('@Url.Page("/Shops/Index")?handler=DeleteChecked' ,{id:checkedId}).then(res => {
                            toastr["info"](`@_localizer["Delete ${checkedId.length} successfully"]`);
                            reloadData();
                        })

                    }
                }
            });

        }
    }
    var onExport = () => {
        var options = $dg.datagrid('options');
        var data = {
            filterRules: JSON.stringify(options.filterRules),
            sort: options.sortName,
            order: options.sortOrder,
        }

        axios.post('@Url.Page("/Shops/Index")?handler=Export',
            data,
            {
                responseType: "blob"
            })
            .then(response => {
                const filename = getFileName(response.headers['content-disposition']);
                const url = window.URL.createObjectURL(new Blob([response.data], { type: 'application/vnd.openxmlformats-officeshop.spreadsheetml.sheet;charset=utf-8' }));
                const link = document.createElement('a');
                link.href = url;
                link.setAttribute('download', filename);
                document.body.appendChild(link);
                link.click();
                toastr["info"](`@_localizer["Export successfully"]`);
            })


    }
     



</script>
}
